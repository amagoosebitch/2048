class Drawer {
    function void prepareScreen(int startX, int startY) {
        var int offset;

        do Screen.setColor(false);
		do Screen.drawRectangle(0, 0, 511, 255);

        do Screen.setColor(true);

        let offset = 0;
        while (offset < 80) {
            do Screen.drawLine(startX, startY + offset, startX + 64, startY + offset);
            let offset = offset + 16;
        }

        let offset = 0;
        while (offset < 80) {
            do Screen.drawLine(startX + offset, startY, startX + offset, startY + 64);
            let offset = offset + 16;
        }

        return;
    }

    function void draw(int memAddress, int value) {
        if (value = 2) {
            do Drawer.draw2(memAddress);
        } if (value = 4) {
            do Drawer.draw4(memAddress);
        } if (value = 8) {
            do Drawer.draw8(memAddress);
        } if (value = 16) {
            do Drawer.draw16(memAddress);
        } if (value = 32) {
            do Drawer.draw32(memAddress);
        } if (value = 64) {
            do Drawer.draw64(memAddress);
        } if (value = 128) {
            do Drawer.draw128(memAddress);
        } if (value = 256) {
            do Drawer.draw256(memAddress);
        } if (value = 512) {
            do Drawer.draw512(memAddress);
        } if (value = 1024) {
            do Drawer.draw1024(memAddress);
        } if (value = 2048) {
            do Drawer.draw2048(memAddress);
        }

        return;
    }

    function void draw2(int memAddress) {
        // рисуем 2
        do Memory.poke(memAddress+0, 1);
        do Memory.poke(memAddress+32, 1);
        do Memory.poke(memAddress+64, 2017);
        do Memory.poke(memAddress+96, 3121);
        do Memory.poke(memAddress+128, 2065);
        do Memory.poke(memAddress+160, 3073);
        do Memory.poke(memAddress+192, 1537);
        do Memory.poke(memAddress+224, 769);
        do Memory.poke(memAddress+256, 385);
        do Memory.poke(memAddress+288, 193);
        do Memory.poke(memAddress+320, 97);
        do Memory.poke(memAddress+352, 49);
        do Memory.poke(memAddress+384, 4081);
        do Memory.poke(memAddress+416, 1);
        do Memory.poke(memAddress+448, 1);
        do Memory.poke(memAddress+480, -1);

        return;
    }

    function void draw4(int memAddress) {
        // рисуем 4
        do Memory.poke(memAddress+0, 1);
        do Memory.poke(memAddress+32, 1);
        do Memory.poke(memAddress+64, 1057);
        do Memory.poke(memAddress+96, 1057);
        do Memory.poke(memAddress+128, 1057);
        do Memory.poke(memAddress+160, 1057);
        do Memory.poke(memAddress+192, 1057);
        do Memory.poke(memAddress+224, 2017);
        do Memory.poke(memAddress+256, 1025);
        do Memory.poke(memAddress+288, 1025);
        do Memory.poke(memAddress+320, 1025);
        do Memory.poke(memAddress+352, 1025);
        do Memory.poke(memAddress+384, 1025);
        do Memory.poke(memAddress+416, 1);
        do Memory.poke(memAddress+448, 1);
        do Memory.poke(memAddress+480, -1);

        return;
    }

    function void draw8(int memAddress) {
        // рисуем 8
        do Memory.poke(memAddress+0, 1);
        do Memory.poke(memAddress+32, 1);
        do Memory.poke(memAddress+64, 1985);
        do Memory.poke(memAddress+96, 3169);
        do Memory.poke(memAddress+128, 2081);
        do Memory.poke(memAddress+160, 2081);
        do Memory.poke(memAddress+192, 3169);
        do Memory.poke(memAddress+224, 1985);
        do Memory.poke(memAddress+256, 3169);
        do Memory.poke(memAddress+288, 2081);
        do Memory.poke(memAddress+320, 2081);
        do Memory.poke(memAddress+352, 3169);
        do Memory.poke(memAddress+384, 1985);
        do Memory.poke(memAddress+416, 1);
        do Memory.poke(memAddress+448, 1);
        do Memory.poke(memAddress+480, -1);

        return;
    }

    function void draw16(int memAddress) {
        // рисуем 16
        do Memory.poke(memAddress+0, 1);
        do Memory.poke(memAddress+32, 1);
        do Memory.poke(memAddress+64, 3857);
        do Memory.poke(memAddress+96, 6545);
        do Memory.poke(memAddress+128, 4241);
        do Memory.poke(memAddress+160, 145);
        do Memory.poke(memAddress+192, 145);
        do Memory.poke(memAddress+224, 3985);
        do Memory.poke(memAddress+256, 6545);
        do Memory.poke(memAddress+288, 4241);
        do Memory.poke(memAddress+320, 4241);
        do Memory.poke(memAddress+352, 6545);
        do Memory.poke(memAddress+384, 3857);
        do Memory.poke(memAddress+416, 1);
        do Memory.poke(memAddress+448, 1);
        do Memory.poke(memAddress+480, -1);

        return;
    }

    function void draw32(int memAddress) {
        // рисуем 32
        do Memory.poke(memAddress+0, 1);
        do Memory.poke(memAddress+32, 1);
        do Memory.poke(memAddress+64, 15481);
        do Memory.poke(memAddress+96, 26317);
        do Memory.poke(memAddress+128, 17029);
        do Memory.poke(memAddress+160, 16513);
        do Memory.poke(memAddress+192, 24769);
        do Memory.poke(memAddress+224, 12409);
        do Memory.poke(memAddress+256, 6337);
        do Memory.poke(memAddress+288, 2177);
        do Memory.poke(memAddress+320, 3205);
        do Memory.poke(memAddress+352, 1741);
        do Memory.poke(memAddress+384, 32377);
        do Memory.poke(memAddress+416, 1);
        do Memory.poke(memAddress+448, 1);
        do Memory.poke(memAddress+480, -1);

        return;
    }

    function void draw64(int memAddress) {
        // рисуем 64
        do Memory.poke(memAddress+0, 1);
        do Memory.poke(memAddress+32, 1);
        do Memory.poke(memAddress+64, 17017);
        do Memory.poke(memAddress+96, 17101);
        do Memory.poke(memAddress+128, 17029);
        do Memory.poke(memAddress+160, 16901);
        do Memory.poke(memAddress+192, 16901);
        do Memory.poke(memAddress+224, 32381);
        do Memory.poke(memAddress+256, 16589);
        do Memory.poke(memAddress+288, 16517);
        do Memory.poke(memAddress+320, 16517);
        do Memory.poke(memAddress+352, 16589);
        do Memory.poke(memAddress+384, 16505);
        do Memory.poke(memAddress+416, 1);
        do Memory.poke(memAddress+448, 1);
        do Memory.poke(memAddress+480, -1);

        return;
    }

    function void draw128(int memAddress) {
        // рисуем 128
        do Memory.poke(memAddress+0, 1);
        do Memory.poke(memAddress+32, 1);
        do Memory.poke(memAddress+64, 14565);
        do Memory.poke(memAddress+96, 28085);
        do Memory.poke(memAddress+128, 17685);
        do Memory.poke(memAddress+160, 17669);
        do Memory.poke(memAddress+192, 28037);
        do Memory.poke(memAddress+224, 14469);
        do Memory.poke(memAddress+256, 27845);
        do Memory.poke(memAddress+288, 17509);
        do Memory.poke(memAddress+320, 17461);
        do Memory.poke(memAddress+352, 27669);
        do Memory.poke(memAddress+384, 14837);
        do Memory.poke(memAddress+416, 1);
        do Memory.poke(memAddress+448, 1);
        do Memory.poke(memAddress+480, -1);

        return;
    }

    function void draw256(int memAddress) {
        // рисуем 256
        do Memory.poke(memAddress+0, 1);
        do Memory.poke(memAddress+32, 1);
        do Memory.poke(memAddress+64, 31677);
        do Memory.poke(memAddress+96, 18597);
        do Memory.poke(memAddress+128, 18597);
        do Memory.poke(memAddress+160, 2209);
        do Memory.poke(memAddress+192, 2225);
        do Memory.poke(memAddress+224, 2193);
        do Memory.poke(memAddress+256, 31641);
        do Memory.poke(memAddress+288, 18953);
        do Memory.poke(memAddress+320, 18957);
        do Memory.poke(memAddress+352, 18949);
        do Memory.poke(memAddress+384, 31677);
        do Memory.poke(memAddress+416, 1);
        do Memory.poke(memAddress+448, 1);
        do Memory.poke(memAddress+480, -1);

        return;
    }

    function void draw512(int memAddress) {
        // рисуем 512
        do Memory.poke(memAddress+0, 1);
        do Memory.poke(memAddress+32, 1);
        do Memory.poke(memAddress+64, 14717);
        do Memory.poke(memAddress+96, 27909);
        do Memory.poke(memAddress+128, 17669);
        do Memory.poke(memAddress+160, 16645);
        do Memory.poke(memAddress+192, 24837);
        do Memory.poke(memAddress+224, 12605);
        do Memory.poke(memAddress+256, 4449);
        do Memory.poke(memAddress+288, 6465);
        do Memory.poke(memAddress+320, 3393);
        do Memory.poke(memAddress+352, 1377);
        do Memory.poke(memAddress+384, 32061);
        do Memory.poke(memAddress+416, 1);
        do Memory.poke(memAddress+448, 1);
        do Memory.poke(memAddress+480, -1);

        return;
    }

    function void draw1024(int memAddress) {
        // рисуем 1024
        do Memory.poke(memAddress+0, 1);
        do Memory.poke(memAddress+32, 1);
        do Memory.poke(memAddress+64, 1);
        do Memory.poke(memAddress+96, 1);
        do Memory.poke(memAddress+128, 21029);
        do Memory.poke(memAddress+160, 22389);
        do Memory.poke(memAddress+192, 21845);
        do Memory.poke(memAddress+224, 29781);
        do Memory.poke(memAddress+256, 18005);
        do Memory.poke(memAddress+288, 17269);
        do Memory.poke(memAddress+320, 18213);
        do Memory.poke(memAddress+352, 1);
        do Memory.poke(memAddress+384, 1);
        do Memory.poke(memAddress+416, 1);
        do Memory.poke(memAddress+448, 1);
        do Memory.poke(memAddress+480, -1);

        return;
    }

    function void draw2048(int memAddress) {
        // рисуем 2048
        do Memory.poke(memAddress+0, 1);
        do Memory.poke(memAddress+32, 1);
        do Memory.poke(memAddress+64, 1);
        do Memory.poke(memAddress+96, 1);
        do Memory.poke(memAddress+128, 1);
        do Memory.poke(memAddress+160, 30445);
        do Memory.poke(memAddress+192, 22185);
        do Memory.poke(memAddress+224, 30381);
        do Memory.poke(memAddress+256, 21669);
        do Memory.poke(memAddress+288, 29933);
        do Memory.poke(memAddress+320, 1);
        do Memory.poke(memAddress+352, 1);
        do Memory.poke(memAddress+384, 1);
        do Memory.poke(memAddress+416, 1);
        do Memory.poke(memAddress+448, 1);
        do Memory.poke(memAddress+480, -1);

        return;
    }
}